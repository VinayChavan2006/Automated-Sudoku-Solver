rbinom(n=1000,size=1,prob = 0.5)
tosses <- rbinom(n=1000,size=1,prob = 0.5)
sum(tosses)/1000
tosses <- rbinom(n=1000,size=1,prob = 0.3)
sum(tosses)/1000
ball<- sample(x=c("red","green","blue"),size = 1,prob = c(3,2,2))
ball
ball<- sample(x=c("red","green","blue"),size = 1,prob = c(3,2,2))
ball
ball<- sample(x=c("red","green","blue"),size = 1,prob = c(3,2,2))
ball
ball<- sample(x=c("red","green","blue"),size = 1,prob = c(3,2,2))
ball
ball<- sample(x=c("red","green","blue"),size = 1,prob = c(3,2,2))
ball
ball<- sample(x=c("red","green","blue"),size = 1,prob = c(3,2,2))
ball
?norm
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec<- norm(A[ ,i],"2")
}
norm_vector
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vector
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vect
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
A <- matrix(c(3, 1, -2, 4, 5, 3, -1, 2, -2), nrow = 3, ncol = 3)
A
norm_vec<- numeric(length = 3)
for(i in 1:3){
norm_vec[i]<- norm(A[ ,i],"2")
}
norm_vec
sample(x=1:3,size = 1,prob = norm_vec)
dist <- runif(n=1,min = 0,max = 5)
dist
dist <- runif(n=1,min = 0,max = 5)
dist
dist <- runif(n=1,min = 0,max = 5)
dist
dist <- runif(n=1,min = 0,max = 5)
dist
dist <- runif(n=1,min = 0,max = 5)
dist
dist <- runif(n=1,min = 0,max = 5)
dist
exceed <- function()
{
count <- 0
sum <- 0
while(sum<1){
num <- runif(n=1,min=0,max=1)
print(num)
sum <- sum+num
count <- count +1
}
return(count)
}
exceed()
exceed <- function()
{
count <- 0
sum <- 0
while(sum<1){
num <- runif(n=1,min=0,max=1)
print(num)
sum <- sum+num
count <- count +1
}
return(count)
}
exceed()
exceed <- function()
{
count <- 0
sum <- 0
while(sum<1){
num <- runif(n=1,min=0,max=1)
print(num)
sum <- sum+num
count <- count +1
}
return(count)
}
exceed()
exceed <- function()
{
count <- 0
sum <- 0
while(sum<1){
num <- runif(n=1,min=0,max=1)
print(num)
sum <- sum+num
count <- count +1
}
return(count)
}
exceed()
exceed <- function()
{
count <- 0
sum <- 0
while(sum<1){
num <- runif(n=1,min=0,max=1)
sum <- sum+num
count <- count +1
}
return(count)
}
store <- numeric(length = 1000)
for(i in 1:1000)
{
store[i] <- exceed()
}
store
exceed <- function()
{
count <- 0
sum <- 0
while(sum<1){
num <- runif(n=1,min=0,max=1)
sum <- sum+num
count <- count +1
}
return(count)
}
store <- numeric(length = 1000)
for(i in 1:1000)
{
store[i] <- exceed()
}
mean(store)
fact <- function(n){
return(prod(1:n))
}
fact(5)
2+3
c(2,3)
##########
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
seat
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
seat$Seat.Number[which(seat$Roll.No==231155)]
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
my_seat <- seat$Roll.No==230167
for(i in 1:length(my_seat)){
if(my_seat==TRUE){
print(i)
}
}
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
my_seat <- seat$Roll.No==230167
for(i in 1:length(my_seat)){
if(my_seat[i]==TRUE){
print(i)
}
}
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
All_roll <- seat$Roll.No
for(i in 1:length(All_roll)){
if(All_roll[i]==230167){
print(i)
}
}
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
All_roll <- seat$Roll.No
All_seat <- seat$Seat.Number
for(i in 1:length(All_roll)){
if(All_roll[i]==230167){
All_seat[i]
}
}
seat <- read.csv("https://dvats.github.io/assets/course/mth208/seating.csv")
All_roll <- seat$Roll.No
All_seat <- seat$Seat.Number
for(i in 1:length(All_roll)){
if(All_roll[i]==230167){
print(All_seat[i])
}
}
indexx <- which(seat$Roll.No==230167)
indexx
index <- which(seat$Roll.No==230167)
seat$Seat.Number[index]
View(seat)
1e3
10e3
1e3
1e9
setwd("C:/Users/vinay/OneDrive/Desktop/courses/MTH208/worksheet-2-VinayChavan2006-main")
seat <- read.csv("seating.csv")
BS_Students <- 0
MS_Students <- 0
sum(seat$Roll.No<1e7)
seat <- read.csv("seating.csv")
BS_Students <- 0
MS_Students <- 0
sum(seat$Roll.No<1e8)
seat <- read.csv("seating.csv")
BS_Students <- 0
MS_Students <- 0
sum(seat$Roll.No>1e8)
seat <- read.csv("seating.csv")
BS_students <- sum(seat$Roll.No<1e7)
MS_students <- sum(seat$Roll.No>1e7)
seat <- read.csv("seating.csv")
BS_students <- sum(seat$Roll.No<1e7)
MS_students <- sum(seat$Roll.No>1e7)
BS_students
MS_students
seat <- read.csv("seating.csv")
BS_students <- sum(seat$Roll.No<1e7)
MS_students <- sum(seat$Roll.No>1e7)
BS_students
MS_students
